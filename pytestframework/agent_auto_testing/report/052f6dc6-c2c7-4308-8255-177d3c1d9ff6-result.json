{"name": "按订单号查询，订单号：1061246019", "status": "broken", "statusDetails": {"message": "requests.exceptions.InvalidHeader: Value for header {token: <function user_login at 0x1074a1a70>} must be of type str or bytes, not <class 'function'>", "trace": "header = ('token', <function user_login at 0x1074a1a70>)\n\n    def check_header_validity(header):\n        \"\"\"Verifies that header value is a string which doesn't contain\n        leading whitespace or return characters. This prevents unintended\n        header injection.\n    \n        :param header: tuple, in the format (name, value).\n        \"\"\"\n        name, value = header\n    \n        if isinstance(value, bytes):\n            pat = _CLEAN_HEADER_REGEX_BYTE\n        else:\n            pat = _CLEAN_HEADER_REGEX_STR\n        try:\n>           if not pat.match(value):\nE           TypeError: expected string or bytes-like object\n\n/usr/local/lib/python3.7/site-packages/requests/utils.py:946: TypeError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <order_search.test_order_num.TestOrderSeach object at 0x107502390>, order_num = 1061246019\n\n    @allure.story(\"按订单号查询\")\n    @allure.title(\"按订单号查询，订单号：{order_num}\")\n    @pytest.mark.parametrize(\"order_num\", [1061246019])\n    \n    def test_OrderNumserarch(self, order_num):\n        token = user_login\n    \n        header = {\n            \"Accept-Language\": \"en_US\",\n            \"token\": token\n        }\n    \n        playbody = {\n            \"page_no\": 1,\n            \"page_size\": 5,\n            \"activity_id\": \"\",\n            \"country_id\": \"\",\n            \"city\": -1,\n            \"participation_date_start_time\":\"\",\n            \"participation_date_end_time\": \"\",\n            \"traveler_email\": \"\",\n            \"traveler_phone\": \"\",\n            \"has_refund\": 0,\n            \"agent_id\": \"\",\n            \"payment_gateway\": \"\",\n            \"booking_channel\": \"\",\n            \"order_no\": order_num,\n            \"booking_number\": \"\",\n            \"related_booking_number\": \"\",\n            \"ticket_status\": -1\n        }\n>       res = requests.get(base_url, headers=header, params=playbody)\n\norder_search/test_order_num.py:52: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.7/site-packages/requests/api.py:76: in get\n    return request('get', url, params=params, **kwargs)\n/usr/local/lib/python3.7/site-packages/requests/api.py:61: in request\n    return session.request(method=method, url=url, **kwargs)\n/usr/local/lib/python3.7/site-packages/requests/sessions.py:516: in request\n    prep = self.prepare_request(req)\n/usr/local/lib/python3.7/site-packages/requests/sessions.py:459: in prepare_request\n    hooks=merge_hooks(request.hooks, self.hooks),\n/usr/local/lib/python3.7/site-packages/requests/models.py:315: in prepare\n    self.prepare_headers(headers)\n/usr/local/lib/python3.7/site-packages/requests/models.py:449: in prepare_headers\n    check_header_validity(header)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nheader = ('token', <function user_login at 0x1074a1a70>)\n\n    def check_header_validity(header):\n        \"\"\"Verifies that header value is a string which doesn't contain\n        leading whitespace or return characters. This prevents unintended\n        header injection.\n    \n        :param header: tuple, in the format (name, value).\n        \"\"\"\n        name, value = header\n    \n        if isinstance(value, bytes):\n            pat = _CLEAN_HEADER_REGEX_BYTE\n        else:\n            pat = _CLEAN_HEADER_REGEX_STR\n        try:\n            if not pat.match(value):\n                raise InvalidHeader(\"Invalid return character or leading space in header: %s\" % name)\n        except TypeError:\n            raise InvalidHeader(\"Value for header {%s: %s} must be of type str or \"\n>                               \"bytes, not %s\" % (name, value, type(value)))\nE           requests.exceptions.InvalidHeader: Value for header {token: <function user_login at 0x1074a1a70>} must be of type str or bytes, not <class 'function'>\n\n/usr/local/lib/python3.7/site-packages/requests/utils.py:950: InvalidHeader"}, "parameters": [{"name": "order_num", "value": "1061246019"}], "start": 1592117978486, "stop": 1592117978487, "uuid": "63625964-91ac-49bb-b8ee-cb882be9a445", "historyId": "c4c8c3f7708b99739ea474807aadd9c7", "testCaseId": "02b6165a6b4167fc7196b01b7d8dbce6", "fullName": "order_search.test_order_num.TestOrderSeach#test_OrderNumserarch", "labels": [{"name": "feature", "value": "订单查询"}, {"name": "severity", "value": "normal"}, {"name": "story", "value": "按订单号查询"}, {"name": "parentSuite", "value": "order_search"}, {"name": "suite", "value": "test_order_num"}, {"name": "subSuite", "value": "TestOrderSeach"}, {"name": "host", "value": "wenjian"}, {"name": "thread", "value": "2323-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "order_search.test_order_num"}]}